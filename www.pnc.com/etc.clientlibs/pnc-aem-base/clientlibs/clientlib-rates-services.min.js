//  This file is part of the jQuery formatCurrency Plugin.
//
//    The jQuery formatCurrency Plugin is free software: you can redistribute it
//    and/or modify it under the terms of the GNU General Public License as published 
//    by the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.

//    The jQuery formatCurrency Plugin is distributed in the hope that it will
//    be useful, but WITHOUT ANY WARRANTY; without even the implied warranty 
//    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License along with 
//    the jQuery formatCurrency Plugin.  If not, see <http://www.gnu.org/licenses/>.
jQuery.noConflict();
(function($) {

	$.formatCurrency = {};

	$.formatCurrency.regions = [];

	// default Region is en
	$.formatCurrency.regions[''] = {
		symbol: '$',
		positiveFormat: '%s%n',
		negativeFormat: '(%s%n)',
		decimalSymbol: '.',
		digitGroupSymbol: ',',
		groupDigits: true
	};

	$.fn.formatCurrency = function(destination, settings) {

		if (arguments.length == 1 && typeof destination !== "string") {
			settings = destination;
			destination = false;
		}

		// initialize defaults
		var defaults = {
			name: "formatCurrency",
			colorize: false,
			region: '',
			global: true,
			roundToDecimalPlace: 2, // roundToDecimalPlace: -1; for no rounding; 0 to round to the dollar; 1 for one digit cents; 2 for two digit cents; 3 for three digit cents; ...
			eventOnDecimalsEntered: false
		};
		// initialize default region
		defaults = $.extend(defaults, $.formatCurrency.regions['']);
		// override defaults with settings passed in
		settings = $.extend(defaults, settings);

		// check for region setting
		if (settings.region.length > 0) {
			settings = $.extend(settings, getRegionOrCulture(settings.region));
		}
		settings.regex = generateRegex(settings);

		return this.each(function() {
			var $this = $(this);

			// get number
			var num = '0';
			num = $this[$this.is('input, select, textarea') ? 'val' : 'html']();

			//identify '(123)' as a negative number
			if (num.search('\\(') >= 0) {
				num = '-' + num;
			}

			if (num === '' || (num === '-' && settings.roundToDecimalPlace === -1)) {
				return;
			}

			// if the number is valid use it, otherwise clean it
			if (isNaN(num)) {
				// clean number
				num = num.replace(settings.regex, '');
				
				if (num === '' || (num === '-' && settings.roundToDecimalPlace === -1)) {
					return;
				}
				
				if (settings.decimalSymbol != '.') {
					num = num.replace(settings.decimalSymbol, '.');  // reset to US decimal for arithmetic
				}
				if (isNaN(num)) {
					num = '0';
				}
			}
			
			// evalutate number input
			var numParts = String(num).split('.');
			var isPositive = (num == Math.abs(num));
			var hasDecimals = (numParts.length > 1);
			var decimals = (hasDecimals ? numParts[1].toString() : '0');
			var originalDecimals = decimals;
			
			// format number
			num = Math.abs(numParts[0]);
			num = isNaN(num) ? 0 : num;
			if (settings.roundToDecimalPlace >= 0) {
				decimals = parseFloat('1.' + decimals); // prepend "0."; (IE does NOT round 0.50.toFixed(0) up, but (1+0.50).toFixed(0)-1
				decimals = decimals.toFixed(settings.roundToDecimalPlace); // round
				if (decimals.substring(0, 1) == '2') {
					num = Number(num) + 1;
				}
				decimals = decimals.substring(2); // remove "0."
			}
			num = String(num);

			if (settings.groupDigits) {
				for (var i = 0; i < Math.floor((num.length - (1 + i)) / 3); i++) {
					num = num.substring(0, num.length - (4 * i + 3)) + settings.digitGroupSymbol + num.substring(num.length - (4 * i + 3));
				}
			}

			if ((hasDecimals && settings.roundToDecimalPlace == -1) || settings.roundToDecimalPlace > 0) {
				num += settings.decimalSymbol + decimals;
			}

			// format symbol/negative
			var format = isPositive ? settings.positiveFormat : settings.negativeFormat;
			var money = format.replace(/%s/g, settings.symbol);
			money = money.replace(/%n/g, num);

			// setup destination
			var $destination = $([]);
			if (!destination) {
				$destination = $this;
			} else {
				$destination = $(destination);
			}
			// set destination
			$destination[$destination.is('input, select, textarea') ? 'val' : 'html'](money);

			if (
				hasDecimals && 
				settings.eventOnDecimalsEntered && 
				originalDecimals.length > settings.roundToDecimalPlace
			) {
				$destination.trigger('decimalsEntered', originalDecimals);
			}

			// colorize
			if (settings.colorize) {
				$destination.css('color', isPositive ? 'black' : 'red');
			}
		});
	};

	// Remove all non numbers from text
	$.fn.toNumber = function(settings) {
		var defaults = $.extend({
			name: "toNumber",
			region: '',
			global: true
		}, $.formatCurrency.regions['']);

		settings = jQuery.extend(defaults, settings);
		if (settings.region.length > 0) {
			settings = $.extend(settings, getRegionOrCulture(settings.region));
		}
		settings.regex = generateRegex(settings);

		return this.each(function() {
			var method = $(this).is('input, select, textarea') ? 'val' : 'html';
			$(this)[method]($(this)[method]().replace('(', '(-').replace(settings.regex, ''));
		});
	};

	// returns the value from the first element as a number
	$.fn.asNumber = function(settings) {
		var defaults = $.extend({
			name: "asNumber",
			region: '',
			parse: true,
			parseType: 'Float',
			global: true
		}, $.formatCurrency.regions['']);
		settings = jQuery.extend(defaults, settings);
		if (settings.region.length > 0) {
			settings = $.extend(settings, getRegionOrCulture(settings.region));
		}
		settings.regex = generateRegex(settings);
		settings.parseType = validateParseType(settings.parseType);

		var method = $(this).is('input, select, textarea') ? 'val' : 'html';
		var num = $(this)[method]();
		num = num ? num : "";
		num = num.replace('(', '(-');
		num = num.replace(settings.regex, '');
		if (!settings.parse) {
			return num;
		}

		if (num.length == 0) {
			num = '0';
		}

		if (settings.decimalSymbol != '.') {
			num = num.replace(settings.decimalSymbol, '.');  // reset to US decimal for arthmetic
		}

		return window['parse' + settings.parseType](num);
	};

	function getRegionOrCulture(region) {
		var regionInfo = $.formatCurrency.regions[region];
		if (regionInfo) {
			return regionInfo;
		}
		else {
			if (/(\w+)-(\w+)/g.test(region)) {
				var culture = region.replace(/(\w+)-(\w+)/g, "$1");
				return $.formatCurrency.regions[culture];
			}
		}
		// fallback to extend(null) (i.e. nothing)
		return null;
	}

	function validateParseType(parseType) {
		switch (parseType.toLowerCase()) {
			case 'int':
				return 'Int';
			case 'float':
				return 'Float';
			default:
				throw 'invalid parseType';
		}
	}
	
	function generateRegex(settings) {
		if (settings.symbol === '') {
			return new RegExp("[^\\d" + settings.decimalSymbol + "-]", "g");
		}
		else {
			var symbol = settings.symbol.replace('$', '\\$').replace('.', '\\.');		
			return new RegExp(symbol + "|[^\\d" + settings.decimalSymbol + "-]", "g");
		}	
	}

})(jQuery);
(function ($) {
    var serviceName = "";
    var inputError;
    var zipCode, product = "";
    var event_data = {};
    var serviceNames = {
        "autodealer": "dealerservice",
        "autoprivate": "privatepartyservice",
        "autolease": "leaseservice",
        "autorefi": "autorefinanceservice",
        "puil": "personalunsecuredinstallmentloanservice",
        "puloc": "personalunsecuredlineofcreditservice"
    };
    $(document).ready(function () { // this needs to be reworked - BB
        var preselected = $('#ratesServiceForm .rateproduct').attr('data-product');
        if (preselected) {
            $('#ratesServiceForm .rateproduct').find('option[value=' + preselected + ']').prop('selected', 'selected');
        }
        $(".rates-service-details").hide();
        if ($('#equityProduct').val() && $('#ratesZipCode').val()) {
            $("#getRates").submit();
        }
        $('.rates-data').hide();
        $('a.hide-rates').hide();
        // Check if Zip returned a value or else reset the value
        setZipInput(getUrlZip(), true);

        $('a.content-popup-link').hide();
        $(".rateproduct").change(function () {
            $(".inputError").fadeOut();
            $('.errorTextBox').removeClass('errorTextBox');
        });
    });

    /**
     * Retrieve a cookie
     * @param {String} name - Name of the cookie to find
     * @returns {String} - Value of the cookie
     */
    function getCookie(name) {
        "use strict";
        var value = "; " + document.cookie;
        var parts = value.split("; " + name + "=");
        if (parts.length === 2) {
            return parts.pop().split(";").shift();
        }
    }

    /**
     * Listens for the creation of the pnczip cookie
     * if it doesn't already exist on page load.
     */
    function listenCookieSet() {
        let lastCookie = getCookie('pnczip');
        var zipIntervalId = setInterval(() => {
            let cookie = getCookie('pnczip');
            if (cookie !== lastCookie) {
                setZipInput(cookie, false);
                clearInterval(zipIntervalId);
            }
        }, 300);
    }
    /**
     * Set Zip Code Input field and trigger button click
     * @param {string} initZip - Zip being passed by URL or cookie.
     * @param {Boolean} enableInterval - Prevents a loop from happening. Enables setInterval if true.
     */
    function setZipInput(initZip, enableInterval) {
        if (initZip) {
            if ($("input#ratesZipCode")) { $("input#ratesZipCode").val(getUrlZip()); }
        } else {
            $('#ratesZipCode').val('');
            //PNCZip did not exist. Listen for its creation. 
            if (enableInterval) {
                listenCookieSet();
            }
        }
    }
    function getUrlZip() {
        var vars = [],
            hash;
        var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
        for (var i = 0; i < hashes.length; i++) {
            hash = hashes[i].split('=');
            vars.push(hash[0]);
            vars[hash[0]] = hash[1];
        }
        if (!vars.zipcode) {
            vars.zipcode = getCookie('pnczip');
        }
        return vars.zipcode;
    }

    function validateZipCode(product, zipCode) {
        $(".inputError, .rates-inner .gray-callout-box").remove();
        if (product == "0" || product == "" && zipCode != "") {
            inputError = "Please select a product";
            $('#ratesServiceForm').after('<div class="inputError" aria-labelledby="equityProduct>' + inputError + '</div>');
            $('.rateproduct').addClass('errorTextBox');
            return false;
        } else if (product == "0" || product == "" && zipCode == "") {
            inputError = "Please select a product and enter a 5-digit Zip Code";
            $('#ratesServiceForm').after('<div class="inputError" aria-labelledby="equityProduct ratesZipCode">' + inputError + '</div>');
            $('#ratesZipCode,.rateproduct').addClass('errorTextBox');
            return false;
        }  else if (zipCode.toString().length != 5) {
            $('#ratesZipCode').addClass('errorTextBox');
            inputError = "Zip Code must be five numbers long.";
            $('#ratesServiceForm').after('<div class="inputError" aria-labelledby="ratesZipCode">' + inputError + '</div>');
            return false;
        }
    }

    function getUrlProduct() {
        var vars = [],
            hash;
        var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
        for (var i = 0; i < hashes.length; i++) {
            hash = hashes[i].split('=');
            vars.push(hash[0]);
            vars[hash[0]] = hash[1];
        }
        return vars.product;
    }
    /* Binding to change the second dropdown if user selects auto - dealer; the amounts are different for dealer for some reason */
    $('#autoProduct').on('change', function () {
        if ($(this).val() == 'autodealer') {
            $('#autoLoanAmount').html('<option value="7500.00 - 14999.00">$7,500 - $14,999</option><option value="15000.00 - 75000.00">$15,000 - $75,000</option>');
        } else {
            $('#autoLoanAmount').html('<option value="5000.00 - 9999.00">$5,000 - $9,999</option><option value="10000.00 - 14999.00">$10,000 - $14,999</option><option value="15000.00 - 24999.00">$15,000 - $24,999</option><option value="25000.00 - 100000.00">$25,000 and higher</option>');
        }
    });
    $("#ratesServiceForm").submit(function (event) {
        event.preventDefault();
        zipCode = $("input#ratesZipCode").val();
        product = $(".rateproduct").val();
        validateZipCode(product, zipCode);
        callDsaService(product, zipCode);
    });
    $("#getRates").click(function () {
        product = $(".rateproduct").val();
        var numberPattern = /\d+/g;
        zipCode = $("input#ratesZipCode").val().match(numberPattern);
        if (zipCode) {
            zipCode = zipCode.toString();
        } else {
            zipCode = "";
        }
        validateZipCode(product, zipCode);
        callDsaService(product, zipCode);

    });

    function callDsaService(p, z) {
        serviceName = serviceNames[p];
        jQuery.ajax({
            async: false,
            type: "POST",
            url: "/bin/pnc-com/post/dsaservice",
            dataType: "json",
            data: {
                zipCode: z,
                serviceName: serviceName
            },
            success: function (data) {
                var jsonObj = data;
                if ("appStatusCode" in jsonObj && (jsonObj.appStatusCode == '999' || jsonObj.appStatusCode == '1002' || jsonObj.appStatusCode == '1004' || jsonObj.appStatusCode == '2001' || jsonObj.appStatusCode == '2002' || jsonObj.appStatusCode == '2004')) {
                    $(".inputError, .rates-inner .gray-callout-box").remove();
                    $(".rates-data").html('');
                    $('.hide-rates').hide();
                    $('#ratesZipCode').addClass('errorTextBox');
                    if (serviceName == "personalunsecuredinstallmentloanservice" && jsonObj.appStatusCode == "2004") {
                        //2004 is the code for out of footprint / product not offered in this zipcode. 
                        // var inputError = jsonObj.message;
                        var inputError = 'Product not offered in this area. Visit <a href="https://www.pnc.com/en/personal-banking/borrowing/understanding-loan-options.html?WT.mc_id=Lending_offline_lending">pnc.com/lending</a> for other borrowing options.';
                        var errorClass = "gray-callout-box";//new one to deal with this special case 
                    } else {
                        var inputError = jsonObj.message;
                        var errorClass = "inputError";//normal error class
                    }
                    $('#ratesServiceForm').after(DOMPurify.sanitize('<div class="' + errorClass + '" style="text-align:center;">' + inputError + '</div>'));
                    if ($(".errorTextBox").length > 0) {
                    }
                    return;
                } else {
                    //sometimes DSA will send a non-error JSON object ... with no rates in it. Need to check for that...
                    for (var prop in jsonObj) {
                        if (!jsonObj.hasOwnProperty(prop)) {
                            continue;
                        }
                        if (prop == "currentRates") {
                            var currentRatesLength = jsonObj[prop].length;
                        }
                        if (prop == "promotionalRates") {
                            var promotionalRatesLength = jsonObj[prop].length;
                        }
                        if (currentRatesLength == 0 && promotionalRatesLength == 0) {

                            $('.ratesData').html('');
                            var inputError = "Product not offered in this area. Visit <a href='https://www.pnc.com/en/personal-banking/borrowing/understanding-loan-options.html?WT.mc_id=Lending_offline_lending'>pnc.com/lending</a> for other borrowing options."

                            $(".inputError, .rates-inner .gray-callout-box").remove();//clear any existing errors
                            $('#ratesZipCode').addClass('errorTextBox');
                            $('#ratesServiceForm').after('<div class="inputError" style="text-align:center;color:red">' + inputError + '</div>');
                            return false;
                        }
                    }
                    $('.rates-inner').append('<div id="spinner"></div>');
                    renderRates(p, jsonObj);
                    event_data.form_name = p;
                    event_data.form_step = 'complete';
                    event_data.zip = z;
                    // _satellite.track("form");
                    return;
                }
            },
            error: function (jqXHR, exception) {
                if (exception == "error") {
                    $(".inputError, .rates-inner .gray-callout-box").remove();
                    inputError = "The service is currently unavailable, please try again later.";
                    $('#ratesZipCode').addClass('errorTextBox');
                    $('#ratesServiceForm').after('<div class="inputError" style="text-align:center;color:red">' + inputError + '</div>');
                }
            }
        });
    }

    function compare(a, b) {
        if (parseInt(a["loanAmt"]) < parseInt(b["loanAmt"])) return -1;
        if (parseInt(a["loanAmt"]) > parseInt(b["loanAmt"])) return 1;
        return 0;
    }

    function renderRates(product, json) {
        var datamarkup = $(".rates-data");
        $('a.hide-rates').show();
        $('a.hide-rates').attr("aria-expanded", true);
        datamarkup.html('');
        $(".rates-service-details").hide();
        switch (product) {
            case "puil":
                $("a[href='#puil-details-and-fees']").show();
                datamarkup.prepend("<div class='term-length'>Select how many months you intend to have the loan:  <label id='loanTenure'>loan Tenure</label><select class='puilterm' aria-labelledby='loanTenure'></select></div>");
                $(json).each(function (i, v) { // v is the first level of json objects
                    jQuery.each(v["displayRates"], function (termlengthl, termvaluel) {
                        var termlengthl = DOMPurify.sanitize(termlengthl);
                        $(".puilterm").prepend("<option value='" + termlengthl + "'>" + termlengthl + " Months</option>");
                        datamarkup.append(DOMPurify.sanitize("<table class='term-container' id='lien-container-" + termlengthl + "' aria-labelledby='base-rates-title'><tr><th class='col-Header'>&nbsp;</th></tr></table>"));
                        var copyArray = v["displayRates"][termlengthl];
                        copyArray.sort(compare);
                        jQuery.each(termvaluel, function (amountkeyl, amountvaluel) {
                            $("table#lien-container-" + termlengthl + " tr").append("<th class='col-Header term-amount'>" + DOMPurify.sanitize(amountvaluel["loanAmt"]) + "</th>");
                        });
                        $("table#lien-container-" + termlengthl).append("<tr class='rate-header row-0'></tr>")
                        jQuery.each(termvaluel, function (amountkeyl, amountvaluel) {
                            if (amountvaluel['displayRate'] == 'N/A') {
                                $("table#lien-container-" + termlengthl + " .rate-header.row-0").append("<td class='rate-row loan-rate na-rate-value'>" + DOMPurify.sanitize(amountvaluel["displayRate"]) + "</td>");
                            } else {
                                $("table#lien-container-" + termlengthl + " .rate-header.row-0").append("<td class='rate-row loan-rate'><span class='small-text plrRates'>Rates Range From</span><span class='plrRates'>" + DOMPurify.sanitize(amountvaluel["displayRate"]) + "% - " + DOMPurify.sanitize(amountvaluel["maximumAPR"]) + "%</span></td>");
                            }
                        });
                        $("table#lien-container-" + termlengthl).append("<tr class='rate-header row-1'></tr>")
                        jQuery.each(termvaluel, function (amountkeyl, amountvaluel) {
                            if (amountvaluel['monthlyPayment'] == 'N/A') {
                                $("table#lien-container-" + termlengthl + " .rate-header.row-1").append("<td class='rate-row loan-payment na-payment-value'>" + DOMPurify.sanitize(amountvaluel["monthlyPayment"]) + "</td></tr>");
                            } else {
                                $("table#lien-container-" 
                                + termlengthl + " .rate-header.row-1").append("<td class='rate-row loan-payment'>" 
                                // + amountvaluel["monthlyPayment"] + " - $" 
                                // + amountvaluel["monthlyPaymentMedian"]  + "<br />" 
                                + "<a href='#rate-disclosure' id='lien-disclosure-" 
                                + termlengthl + "-" 
                                + DOMPurify.sanitize(amountvaluel['loanAmt']).slice(0, -3) + "' class='disclose-text rates-disclosure' type='button' aria-expanded='false' aria-controls=''>*Important Disclosures</a></td></tr>");
                                $(
                                    "#lien-disclosure-" +
                                    termlengthl +
                                    "-" +
                                    DOMPurify.sanitize(amountvaluel["loanAmt"]).slice(0, -3)
                                ).click(function () {
                                    buildDisclosure1(
                                        "puil",
                                        amountvaluel["loanTerm"],
                                        amountvaluel["displayEffectiveDate"],
                                        amountvaluel["loanAmt"],
                                        amountvaluel["monthlyPayment"],
                                        amountvaluel["monthlyPaymentMedian"],
                                        amountvaluel["minimumAPR"],
                                        amountvaluel["maximumAPR"],
                                        amountvaluel["minMonthlyPayment"],
                                        amountvaluel["maxMonthlyPayment"],
                                        amountvaluel["loanTerm"],
                                        amountvaluel["annualFee"],
                                        amountvaluel["displayMaxLifetimeAPR"],
                                        amountvaluel["displayRateMedian"],
                                        amountvaluel["monthlyPayMax"]
                                        
                                    );
                                    $(".disclose-text").attr("aria-expanded", false)
                                    $(this).attr("aria-expanded", true)
                                });
                            }
                        });
                    });
                });
                $(".term-container").each(function (i, el) {
                    if (i < 6) {
                        $("#" + DOMPurify.sanitize(el.id) + " .rate-header.row-0").prepend("<td class='rate-header loan-rate'>Loan Rate APR</td>");
                        $("#" + DOMPurify.sanitize(el.id) + " .rate-header.row-1").prepend("<td class='rate-header loan-payment'>" 
                        // + "Estimated Monthly Payment" 
                        + "</td>");
                    }
                });
                $("#lien-container-24").addClass( "selected" );
                $(".puilterm").val("24");
                $(".puilterm").change(function (e) {
                    $(".disclose .disclosure-text").hide();
                    changeTerm(product, $(this).val());
                    $(".term-container").each(function (i, el) {
                        $("#" + DOMPurify.sanitize(el.id)).removeClass( "selected" );
                    })
                    $("#lien-container-" + $(this).val()).addClass( "selected" );
                });
                $('#spinner').remove();
                datamarkup.slideDown("slow");
                break;
            case "puloc":
                $("a[href='#puloc-details-and-fees']").show();
                var rateSets = [];
                if (json.state == "CA") {
                    rateSets.push(json.displayRates["5000"]);
                    datamarkup.html("<table class='money-market-container' id='puloc' style='display: table;' aria-labelledby='base-rates-title'>" 
                    + "<tr><th class='col-Header'><span class='term-amount'>" + DOMPurify.sanitize(rateSets[0].displayLocAmt) + "</span></th>" 
                    + "<tr><td class='rate-row'><span class='small-text'>Variable rates range from&nbsp</span><span class='plocrates'>" + DOMPurify.sanitize(rateSets[0].displayRate) + "% - " + DOMPurify.sanitize(rateSets[0].maximumAPR) + "% &nbspAPR</span></td>" 
                    + "<tr><td class='rate-row middle-row'><a href='#rate-disclosure' id='disclaimText-" + DOMPurify.sanitize(rateSets[0].displayLocAmt) + "' class='small-text rates-disclosure'>*Important Disclosures</a></td>");
                }
                else {
                rateSets.push(json.displayRates["5000"]);
                rateSets.push(json.displayRates["10000"]);
                rateSets.push(json.displayRates["15000"]);
                rateSets.push(json.displayRates["25000"]);
                datamarkup.html(DOMPurify.sanitize("<table class='money-market-container' id='puloc' style='display: table;' aria-labelledby='base-rates-title'>" 
                + "<tr>" 
                + "<th class='col-Header'><span class='term-amount'>" + DOMPurify.sanitize(rateSets[0].displayLocAmt) + "</span></th>" 
                + "<th class='col-Header'><span class='term-amount'>" + DOMPurify.sanitize(rateSets[1].displayLocAmt) + "</span></th>" 
                + "<th class='col-Header'><span class='term-amount'>" + DOMPurify.sanitize(rateSets[2].displayLocAmt) + "</span></th>" 
                + "<th class='col-Header'><span class='term-amount'>" + DOMPurify.sanitize(rateSets[3].displayLocAmt) + "</span></th>"
                +"</tr>" 
                + "<tr>" 
                + "<td class='rate-row'><span class='small-text plocrates'>Variable rates range from&nbsp</span><span class='plocrates'>" + DOMPurify.sanitize(rateSets[0].displayRate) + "% - " + DOMPurify.sanitize(rateSets[0].maximumAPR) + "% &nbspAPR</span></td>" 
                + "<td class='rate-row'><span class='small-text plocrates'>Variable rates range from&nbsp</span><span class='plocrates'>" + DOMPurify.sanitize(rateSets[1].displayRate) + "% - " + DOMPurify.sanitize(rateSets[1].maximumAPR) + "% &nbspAPR</span></td>" 
                + "<td class='rate-row'><span class='small-text plocrates'>Variable rates range from&nbsp</span><span class='plocrates'>" + DOMPurify.sanitize(rateSets[2].displayRate) + "% - " + DOMPurify.sanitize(rateSets[2].maximumAPR) + "% &nbspAPR</span></td>" 
                + "<td class='rate-row'><span class='small-text plocrates'>Variable rates range from&nbsp</span><span class='plocrates'>" + DOMPurify.sanitize(rateSets[3].displayRate) + "% - " + DOMPurify.sanitize(rateSets[3].maximumAPR) + "% &nbspAPR</span></td>" 
                + "</tr>" 
                + "<tr>"
                + "<td class='rate-row middle-row'><a href='#rate-disclosure' id='disclaimText-" + DOMPurify.sanitize(rateSets[0].displayLocAmt) + "' class='small-text rates-disclosure'>*Important Disclosures</a></td>" 
                + "<td class='rate-row middle-row'><a href='#rate-disclosure' id='disclaimText-" + DOMPurify.sanitize(rateSets[1].displayLocAmt) + "' class='small-text rates-disclosure'>*Important Disclosures</a></td>" 
                + "<td class='rate-row middle-row'><a href='#rate-disclosure' id='disclaimText-" + DOMPurify.sanitize(rateSets[2].displayLocAmt) + "' class='small-text rates-disclosure'>*Important Disclosures</a></td>" 
                + "<td class='rate-row middle-row'><a href='#rate-disclosure' id='disclaimText-" + DOMPurify.sanitize(rateSets[3].displayLocAmt) + "' class='small-text rates-disclosure'>*Important Disclosures</a></td>"
                + "</tr>" 
                + "</table>"));
                
                $('#disclaimText-' + DOMPurify.sanitize(rateSets[1].displayLocAmt)).click(function () {
                    buildDisclosure1('puloc', 
                    rateSets[1].annualFee, 
                    rateSets[1].displayEffectiveDate, 
                    rateSets[1].displayLocAmt, 
                    rateSets[1].displayLocAmt, 
                    rateSets[1].minimumAPR, 
                    rateSets[1].minimumAPR, 
                    rateSets[1].maximumAPR, 
                    rateSets[1].minimumRate, 
                    rateSets[1].maxLifetimeAPR, 
                    rateSets[1].annualFee, 
                    rateSets[1].annualFee, 
                    rateSets[1].displayMaxLifetimeAPR)
                });
                $('#disclaimText-' + DOMPurify.sanitize(rateSets[2].displayLocAmt)).click(function () {
                    buildDisclosure1('puloc', 
                    rateSets[2].annualFee, 
                    rateSets[2].displayEffectiveDate, 
                    rateSets[2].displayLocAmt, 
                    rateSets[2].displayLocAmt, 
                    rateSets[2].minimumAPR, 
                    rateSets[2].minimumAPR, 
                    rateSets[2].maximumAPR, 
                    rateSets[2].minimumRate, 
                    rateSets[2].maxLifetimeAPR, 
                    rateSets[2].annualFee, 
                    rateSets[2].annualFee, 
                    rateSets[2].displayMaxLifetimeAPR)
                });
                $('#disclaimText-' + DOMPurify.sanitize(rateSets[3].displayLocAmt)).click(function () {
                    buildDisclosure1('puloc', 
                    rateSets[3].annualFee, 
                    rateSets[3].displayEffectiveDate, 
                    rateSets[3].displayLocAmt, 
                    rateSets[3].displayLocAmt, 
                    rateSets[3].minimumAPR, 
                    rateSets[3].minimumAPR, 
                    rateSets[3].maximumAPR, 
                    rateSets[3].minimumRate, 
                    rateSets[3].maxLifetimeAPR, 
                    rateSets[3].annualFee, 
                    rateSets[3].annualFee, 
                    rateSets[3].displayMaxLifetimeAPR)
                });
            }
            $('#disclaimText-' + DOMPurify.sanitize(rateSets[0].displayLocAmt)).click(function () {
                    buildDisclosure1('puloc', 
                    rateSets[0].annualFee, 
                    rateSets[0].displayEffectiveDate, 
                    rateSets[0].displayLocAmt, 
                    rateSets[0].displayLocAmt, 
                    rateSets[0].minimumAPR, 
                    rateSets[0].minimumAPR, 
                    rateSets[0].maximumAPR, 
                    rateSets[0].minimumRate, 
                    rateSets[0].maxLifetimeAPR, 
                    rateSets[0].annualFee, 
                    rateSets[0].annualFee, 
                    rateSets[0].displayMaxLifetimeAPR)
                });
                $('#spinner').remove();
                datamarkup.slideDown("slow");
                break;
            case "autoprivate":
            case "autodealer":
            case "autorefi":
            case "autolease":
                var loanAmounts = [],
                    modelYears = [],
                    lowerPaymentRates = [],
                    lowerPaymentRatesMedian = [],
                    mostPopularRates = [],
                    mostPopularRatesMedian = [],
                    payOffSoonerRates = [],
                    payOffSoonerRatesMedian = [];
                    extraLowerPaymentRates = [],
                    extraLowerPaymentRatesMedian = [];
                for (var prop in json.ratesList) {
                    loanAmounts.push(prop);
                }
                var loanAmount = $('#autoLoanAmount').val();
                var disclosureJSON = json.ratesDisclosure[loanAmount];
                traverse(json.ratesList[loanAmount.toString()]);

                function traverse(jsonObj) {
                    if (typeof jsonObj == "object") {
                        jQuery.each(jsonObj, function (k, v) {
                            // k is either an array index or object key
                            traverse(v);
                            switch (k) {
                                case "modelYear":
                                    modelYears.push(v)
                                    break;
                                case "lowerPaymentRates":
                                    lowerPaymentRates.push(v);
                                    break;
                                case "lowerPaymentRatesMedian":
                                    lowerPaymentRatesMedian.push(v);
                                    break;
                                case "mostPopularRates":
                                    mostPopularRates.push(v)
                                    break;
                                case "mostPopularRatesMedian":
                                    mostPopularRatesMedian.push(v);
                                    break;
                                case "payOffSoonerRates":
                                    payOffSoonerRates.push(v);
                                    break;
                                case "payOffSoonerRatesMedian":
                                    payOffSoonerRatesMedian.push(v);
                                    break;
                                case "extraLowerPaymentRates":
                                    extraLowerPaymentRates.push(v);
                                    break;
                                case "extraLowerPaymentRatesMedian":
                                    extraLowerPaymentRatesMedian.push(v);
                                    break;
                            }
                        });
                    }
                }
                for (i = 0; i < lowerPaymentRates.length; i++) {
                    if (lowerPaymentRates[i] != "N/A") {
                        lowerPaymentRates[i] = DOMPurify.sanitize(lowerPaymentRates[i]) + "% - " + DOMPurify.sanitize(lowerPaymentRatesMedian[i]) + "%";
                    }
                }
                for (i = 0; i < mostPopularRates.length; i++) {
                    mostPopularRates[i] = DOMPurify.sanitize(mostPopularRates[i]) + "% - " + DOMPurify.sanitize(mostPopularRatesMedian[i]) + "%";
                }
                for (i = 0; i < payOffSoonerRates.length; i++) {
                    payOffSoonerRates[i] = DOMPurify.sanitize(payOffSoonerRates[i]) + "% - " + DOMPurify.sanitize(payOffSoonerRatesMedian[i]) + "%";
                }
                for (i = 0; i < extraLowerPaymentRates.length; i++) {
                    if (extraLowerPaymentRates[i] != "N/A") {
                        extraLowerPaymentRates[i] = DOMPurify.sanitize(extraLowerPaymentRates[i]) + "% - " + DOMPurify.sanitize(extraLowerPaymentRatesMedian[i]) + "%";
                    }
                }
                var concatRows = "";
                for (i = 0; i < 6; i++) {
                    //row class is for css styling, i+1 is to get rid of 0-index
                    concatRows += "<tr><td class='rate-header " + "row" + (i + 1) + " loan-rate'>" + DOMPurify.sanitize(modelYears[i]) + "</td>";
                    concatRows += "<td class='rate-row " + "row" + (i + 1) + " loan-rate'>" + DOMPurify.sanitize(payOffSoonerRates[i]) + "</td>";
                    concatRows += "<td class='rate-row " + "row" + (i + 1) + " loan-rate'>" + DOMPurify.sanitize(mostPopularRates[i]) + "</td>";
                    concatRows += "<td class='rate-row " + "row" + (i + 1) + " loan-rate'>" + DOMPurify.sanitize(lowerPaymentRates[i]) + "</td>";
                    if (jQuery('#autoProduct').val() != 'autodealer') {
                        concatRows += "<td class='rate-row " + "row" + (i + 1) + " loan-rate'>" + DOMPurify.sanitize(extraLowerPaymentRates[i]) + "</td></tr>";
                    }

                }
                var disclosures = '<div id="disclosure1" class="disclose" tabindex="0" style="display:none;"><h4>Pay Off Sooner Rate Payments disclosure</h4><p><strong>Annual Percentage Rates:</strong> Annual Percentage Rate (APR) shown available to well-qualified applicants for auto loans in amounts of $' 
                + disclosureJSON["[MinLoanAmt]"] + ' to $' 
                + disclosureJSON["[MaxLoanAmt]"] + ' with a repayment term of 12-' 
                + disclosureJSON["[MaxLoanDuration_Term2]"] + ' months and secured by a ' 
                + disclosureJSON["[MinModelYr_Term2]"] + '-' 
                + disclosureJSON["[MaxModelYr_Term2]"] + ' model year non-commercial vehicle with up to 100,000 miles (certain additional restrictions apply for vehicles with mileage from 80,000 to 100,000). ' 
                + '  <strong>The lowest rates are available to well-qualified applicants. Your actual APR may be higher than the lowest available rate and will be based upon multiple factors such as credit qualifications, loan amount, repayment term, model year, automated payment from a PNC checking account and number of days to first payment. </strong>' + ' APRs for a loan amount of $' 
                + disclosureJSON["[MinLoanAmt]"] + ' to $' 
                + disclosureJSON["[MaxLoanAmt]"] + ' with a 12-' 
                + disclosureJSON["[MaxLoanDuration_Term2]"] + ' month repayment term and secured by a ' 
                + disclosureJSON["[MinModelYr_Term2]"] + '-' 
                + disclosureJSON["[MaxModelYr_Term2]"] + ' model year auto range from ' 
                + disclosureJSON["[APRMin1_Term2]"] + '% to ' 
                + disclosureJSON["[APRMax1_Term2]"] + '%. Other rates may be applicable for different loan amounts, repayment terms and model years.' 
                + ' <strong>APRs include a 0.25% discount for automated payment from a PNC checking account.</strong> Automated payment must be set up at loan closing to qualify for the 0.25% discount.' 
                + ' If automated payment is discontinued, you may no longer receive an automated payment discount and your rate will increase 0.25%. <strong>Loan Payment Example:</strong> The monthly payment per $1,000 borrowed at ' 
                + disclosureJSON["[APRMin1_Term2]"] + '% APR for a term of ' 
                + disclosureJSON["[MaxLoanDuration_Term2]"] + ' months would require ' 
                + disclosureJSON["[MaxLoanDuration_Term2]"] + ' monthly payments of $' 
                + disclosureJSON["[PmtMin_Term2]"] + ' based on 30 days to first payment. The monthly payment per $1,000 borrowed at ' 
                + disclosureJSON["[APRMax1_Term2]"] + '% APR for a term of 12 months would require 12 monthly payments of $' 
                + disclosureJSON["[PmtMax_Term2]"] + ' based on 30 days to first payment. ' + '<p>Credit is subject to approval. Certain restrictions and conditions apply. Rates, terms and conditions are as of ' 
                + disclosureJSON["[DisplayDate]"] + ' and subject to change at any time.</p>' + '<p>Based on $' 
                + disclosureJSON["[MinLoanAmt]"] + ' to $' 
                + disclosureJSON["[MaxLoanAmt]"] + ' for 12-' 
                + disclosureJSON["[MaxLoanDuration_Term2]"] + ' months. Payments are estimated. Your actual payment may vary based on loan amount, APR and term.</p></div>'
                    + '<div id="disclosure2" class="disclose" tabindex="0" style="display:none;"><h4>Most Popular Rate Payments disclosure</h4><p><strong>Annual Percentage Rates:</strong> Annual Percentage Rate (APR) shown available to well-qualified applicants for auto loans in amounts of $' 
                    + disclosureJSON["[MinLoanAmt]"] + ' to $' 
                    + disclosureJSON["[MaxLoanAmt]"] + ' with a repayment term of ' 
                    + disclosureJSON["[MinLoanDuration_Term3]"] + '-' 
                    + disclosureJSON["[MaxLoanDuration_Term3]"] + ' months and secured by a ' 
                    + disclosureJSON["[MinModelYr_Term3]"] + '-' 
                    + disclosureJSON["[MaxModelYr_Term3]"] + ' model year non-commercial vehicle with up to 100,000 miles (certain additional restrictions apply for vehicles with mileage from 80,000 to 100,000). ' 
                    + '  <strong>The lowest rates are available to well-qualified applicants. Your actual APR may be higher than the lowest available rate and will be based upon multiple factors such as credit qualifications, loan amount, repayment term, model year, automated payment from a PNC checking account and number of days to first payment. </strong>' + ' APRs for a loan amount of $' 
                    + disclosureJSON["[MinLoanAmt]"] + ' to $' 
                    + disclosureJSON["[MaxLoanAmt]"] + ' with a ' 
                    + disclosureJSON["[MinLoanDuration_Term3]"] + '-' 
                    + disclosureJSON["[MaxLoanDuration_Term3]"] + ' month repayment term and secured by a ' 
                    + disclosureJSON["[MinModelYr_Term3]"] + '-' 
                    + disclosureJSON["[MaxModelYr_Term3]"] + ' model year auto range from ' 
                    + disclosureJSON["[APRMin1_Term3]"] + '% to ' 
                    + disclosureJSON["[APRMax1_Term3]"] + '%. Other rates may be applicable for different loan amounts, repayment terms and model years.' 
                    + ' <strong>APRs include a 0.25% discount for automated payment from a PNC checking account.</strong> Automated payment must be set up at loan closing to qualify for the 0.25% discount.' 
                    + ' If automated payment is discontinued, you may no longer receive an automated payment discount and your rate will increase 0.25%. <strong>Loan Payment Example:</strong> The monthly payment per $1,000 borrowed at ' 
                    + disclosureJSON["[APRMin1_Term3]"] + '% APR for a term of ' 
                    + disclosureJSON["[MaxLoanDuration_Term3]"] + ' months would require ' 
                    + disclosureJSON["[MaxLoanDuration_Term3]"] + ' monthly payments of $' 
                    + disclosureJSON["[PmtMin_Term3]"] + ' based on 30 days to first payment. The monthly payment per $1,000 borrowed at ' 
                    + disclosureJSON["[APRMax1_Term3]"] + '% APR for a term of ' 
                    + disclosureJSON["[MinLoanDuration_Term3]"] + ' months would require ' 
                    + disclosureJSON["[MinLoanDuration_Term3]"] + ' monthly payments of $' 
                    + disclosureJSON["[PmtMax_Term3]"] + ' based on 30 days to first payment. ' 
                    + '<p>Credit is subject to approval. Certain restrictions and conditions apply. Rates, terms and conditions are as of ' 
                    + disclosureJSON["[DisplayDate]"] + ' and subject to change at any time.</p>' + '<p>Based on $' 
                    + disclosureJSON["[MinLoanAmt]"] + ' to $' 
                    + disclosureJSON["[MaxLoanAmt]"] + ' for ' 
                    + disclosureJSON["[MinLoanDuration_Term3]"] + '-' 
                    + disclosureJSON["[MaxLoanDuration_Term3]"] + ' months. Payments are estimated. Your actual payment may vary based on loan amount, APR and term.</p></div>'
                    + '<div id="disclosure3" class="disclose" tabindex="0" style="display:none;"><h4>Balanced Rate Payments disclosure</h4><p><strong>Annual Percentage Rates:</strong> Annual Percentage Rate (APR) shown available to well-qualified applicants for auto loans in amounts of $' 
                    + disclosureJSON["[MinLoanAmt]"] + ' to $' 
                    + disclosureJSON["[MaxLoanAmt]"] + ' with a repayment term of ' 
                    + disclosureJSON["[MinLoanDuration_Term4]"] + '-' 
                    + disclosureJSON["[MaxLoanDuration_Term4]"] + ' months and secured by a ' 
                    + disclosureJSON["[MinModelYr_Term4]"] + '-' 
                    + disclosureJSON["[MaxModelYr_Term4]"] + ' model year non-commercial vehicle with up to 100,000 miles (certain additional restrictions apply for vehicles with mileage from 80,000 to 100,000). ' 
                    + '  <strong>The lowest rates are available to well-qualified applicants. Your actual APR may be higher than the lowest available rate and will be based upon multiple factors such as credit qualifications, loan amount, repayment term, model year, automated payment from a PNC checking account and number of days to first payment. </strong>' + ' APRs for a loan amount of $' 
                    + disclosureJSON["[MinLoanAmt]"] + ' to $' 
                    + disclosureJSON["[MaxLoanAmt]"] + ' with a ' 
                    + disclosureJSON["[MinLoanDuration_Term4]"] + '-' 
                    + disclosureJSON["[MaxLoanDuration_Term4]"] + ' month repayment term and secured by a ' 
                    + disclosureJSON["[MinModelYr_Term4]"] + '-' 
                    + disclosureJSON["[MaxModelYr_Term4]"] + ' model year auto range from ' 
                    + disclosureJSON["[APRMin1_Term4]"] + '% to ' 
                    + disclosureJSON["[APRMax1_Term4]"] + '%. Other rates may be applicable for different loan amounts, repayment terms and model years.' 
                    + ' <strong>APRs include a 0.25% discount for automated payment from a PNC checking account.</strong> Automated payment must be set up at loan closing to qualify for the 0.25% discount.' 
                    + ' If automated payment is discontinued, you may no longer receive an automated payment discount and your rate will increase 0.25%. <strong>Loan Payment Example:</strong> The monthly payment per $1,000 borrowed at ' 
                    + disclosureJSON["[APRMin1_Term4]"] + '% APR for a term of ' 
                    + disclosureJSON["[MaxLoanDuration_Term4]"] + ' months would require ' 
                    + disclosureJSON["[MaxLoanDuration_Term4]"] + ' monthly payments of $' 
                    + disclosureJSON["[PmtMin_Term4]"] + ' based on 30 days to first payment. The monthly payment per $1,000 borrowed at ' 
                    + disclosureJSON["[APRMax1_Term4]"] + '% APR for a term of ' 
                    + disclosureJSON["[MinLoanDuration_Term4]"] + ' months would require ' 
                    + disclosureJSON["[MinLoanDuration_Term4]"] + ' monthly payments of $' 
                    + disclosureJSON["[PmtMax_Term4]"] + ' based on 30 days to first payment. ' + '<p>Credit is subject to approval. Certain restrictions and conditions apply. Rates, terms and conditions are as of ' 
                    + disclosureJSON["[DisplayDate]"] + ' and subject to change at any time.</p>' + '<p>Based on $' 
                    + disclosureJSON["[MinLoanAmt]"] + ' to $' 
                    + disclosureJSON["[MaxLoanAmt]"] + ' for ' 
                    + disclosureJSON["[MinLoanDuration_Term4]"] + '-' 
                    + disclosureJSON["[MaxLoanDuration_Term4]"] + ' months. Payments are estimated. Your actual payment may vary based on loan amount, APR and term.</p></div>';
                if (jQuery('#autoProduct').val() != 'autodealer') {
                    disclosures += '<div id="disclosure4" class="disclose" tabindex="0" style="display:none;"><h4>Lower Rate Payments disclosure</h4><p><strong>Annual Percentage Rates:</strong> Annual Percentage Rate (APR) shown available to well-qualified applicants for auto loans in amounts of $' 
                    + disclosureJSON["[MinLoanAmt]"] + ' to $' 
                    + disclosureJSON["[MaxLoanAmt]"] + ' with a repayment term of ' 
                    + disclosureJSON["[MinLoanDuration_Term5]"] + '-' 
                    + disclosureJSON["[MaxLoanDuration_Term5]"] + ' months and secured by a ' 
                    + disclosureJSON["[MinModelYr_Term5]"] + '-' 
                    + disclosureJSON["[MaxModelYr_Term5]"] + ' model year non-commercial vehicle with up to 100,000 miles (certain additional restrictions apply for vehicles with mileage from 80,000 to 100,000). ' 
                    + '  <strong>The lowest rates are available to well-qualified applicants. Your actual APR may be higher than the lowest available rate and will be based upon multiple factors such as credit qualifications, loan amount, repayment term, model year, automated payment from a PNC checking account and number of days to first payment. </strong>' + ' APRs for a loan amount of $' 
                    + disclosureJSON["[MinLoanAmt]"] + ' to $' 
                    + disclosureJSON["[MaxLoanAmt]"] + ' with a ' 
                    + disclosureJSON["[MinLoanDuration_Term5]"] + '-' 
                    + disclosureJSON["[MaxLoanDuration_Term5]"] + ' month repayment term and secured by a ' 
                    + disclosureJSON["[MinModelYr_Term5]"] + '-' 
                    + disclosureJSON["[MaxModelYr_Term5]"] + ' model year auto range from ' 
                    + disclosureJSON["[APRMin1_Term5]"] + '% to ' 
                    + disclosureJSON["[APRMax1_Term5]"] + '%. Other rates may be applicable for different loan amounts, repayment terms and model years.' 
                    + ' <strong>APRs include a 0.25% discount for automated payment from a PNC checking account.</strong> Automated payment must be set up at loan closing to qualify for the 0.25% discount.' 
                    + ' If automated payment is discontinued, you may no longer receive an automated payment discount and your rate will increase 0.25%. <strong>Loan Payment Example:</strong> The monthly payment per $1,000 borrowed at ' 
                    + disclosureJSON["[APRMin1_Term5]"] + '% APR for a term of ' 
                    + disclosureJSON["[MaxLoanDuration_Term5]"] + ' months would require ' 
                    + disclosureJSON["[MaxLoanDuration_Term5]"] + ' monthly payments of $' 
                    + disclosureJSON["[PmtMin_Term5]"] + ' based on 30 days to first payment. The monthly payment per $1,000 borrowed at ' 
                    + disclosureJSON["[APRMax1_Term5]"] + '% APR for a term of ' 
                    + disclosureJSON["[MinLoanDuration_Term5]"] + ' months would require ' 
                    + disclosureJSON["[MinLoanDuration_Term5]"] + ' monthly payments of $' 
                    + disclosureJSON["[PmtMax_Term5]"] + ' based on 30 days to first payment. ' + '<p>Credit is subject to approval. Certain restrictions and conditions apply. Rates, terms and conditions are as of ' 
                    + disclosureJSON["[DisplayDate]"] + ' and subject to change at any time.</p>' + '<p>Based on $' 
                    + disclosureJSON["[MinLoanAmt]"] + ' to $' 
                    + disclosureJSON["[MaxLoanAmt]"] + ' for ' 
                    + disclosureJSON["[MinLoanDuration_Term5]"] + '-' 
                    + disclosureJSON["[MaxLoanDuration_Term5]"] + ' months. Payments are estimated. Your actual payment may vary based on loan amount, APR and term.</p></div>';
                }
                setTimeout(function () {
                    datamarkup.html(DOMPurify.sanitize("<table class='money-market-container " + (jQuery('#autoProduct').val() == 'autodealer' ? "autodealer" : "") + "' id='auto' style='display: table;' aria-labelledby='base-rates-title'>"
                        + "<tr>" +
                        "<th class='col-Header'>Model Year</th>"
                        + "<th class='col-Header'>Pay Off Sooner</th>"
                        + "<th class='col-Header'>Most Popular</th>"
                        + "<th class='col-Header'>Balanced Rate</th>" + (jQuery('#autoProduct').val() == 'autodealer' ? "" : "<th class='col-Header'>Lower Payments</th>")
                        + "</tr>"
                        + "<tr>"
                        + "<td class='col-Header'></td>"
                        + "<td class='col-Header'>12 to 48 Months<br>APR as low as</td>"
                        + "<td class='col-Header'>49 to 60 Months<br>APR as low as</td>"
                        + "<td class='col-Header'>61 to 72 Months<br>APR as low as</td>" + (jQuery('#autoProduct').val() == 'autodealer' ? "" : "<td class='col-Header'>73 to 84 Months<br>APR as low as</td>") + "</tr>"
                        + concatRows + "<tr>"
                        + "<td class='rate-header loan-rate'></td>"
                        + "<td class='rate-row loan-rate'><a class='disclose-text' aria-controls='" + (jQuery(".rates-data .disclose").attr("id")) + "'  aria-expanded='false' type='button' href='#disclosure1'>*Important Disclosures</a></td>"
                        + "<td class='rate-row loan-rate'><a class='disclose-text' aria-controls='" + (jQuery(".rates-data .disclose").attr("id")) + "' aria-expanded='false' type='button' href='#disclosure2'>*Important Disclosures</a></td>"
                        + "<td class='rate-row loan-rate'><a class='disclose-text' aria-controls='" + (jQuery(".rates-data .disclose").attr("id")) + "' aria-expanded='false' type='button' href='#disclosure3'>*Important Disclosures</a></td>"
                        + (jQuery('#autoProduct').val() == 'autodealer' ? "" : "<td class='rate-row loan-rate'><a class='disclose-text' aria-controls='" + (jQuery(".rates-data .disclose").attr("id")) + "' aria-expanded='false' type='button' href='#disclosure4'>*Important Disclosures</a></td>")
                        + "</tr>" + "</table>" + disclosures));
                    $('#spinner').remove();
                    //output disclosures
                    $("body").off("click", ".rates-data a");
                    $(".rates-data a").off("click");
                    $("body").on("click", ".rates-data a", function (e) {
                        if ($($(this).attr("href")).length) {
                            e.preventDefault();
                            $(".disclose").slideUp("fast");
                            $($(this).attr("href")).slideDown("slow").focus();
                            $("html,body").animate({ 'scrollTop': $(this).position().top - 50 }, 500);
                            $(".disclose-text").attr("aria-expanded", false)
                            $(this).attr("aria-expanded", true)
                        }

                    })
                    datamarkup.slideDown("slow");
                }, 1000);
                break;
        }

        $(".term-amount").not("#cd .term-amount").formatCurrency({
            roundToDecimalPlace: 0,
            region: "en-US"
        });
        $("#cd .term-amount").formatCurrency({
            region: "en-US"
        });
        $('.rates-data').append(DOMPurify.sanitize("<div id='rate-disclosure' class='disclose' style='display:none'></div>"));

        if ($('.hide-rates').length < 1) {
            $(DOMPurify.sanitize("<a href='#' class='hide-rates' type='button' aria-expanded='true' id='hideDetails' aria-controls=''>Hide Details</a>")).insertAfter("#ratesServiceForm");
        }
        if ($(".hide-rates").html() == "Expand Details") {
            $(".hide-rates").html("Hide Details");
        }
        $('.hide-rates').off('click').on("click", function (e) { e.preventDefault(); hideRates(); });
    }

    function hideRates() {
        if ($(".rates-data").is(":visible")) {
            $(".rates-data").slideUp('slow');
            $(".rates-data").slideUp('slow');
            $('a.hide-rates').attr("aria-expanded", false);
            $(".hide-rates").html("Expand Details");
            $(".rates-service-details").hide();
        } else {
            $(".hide-rates").html("Hide Details");
            $(".rates-data").slideDown('slow');
            $('a.hide-rates').attr("aria-expanded", true);
            var eqProdVal = $('#equityProduct').val();
            switch (eqProdVal) {
                case "puil":
                    $('.rates-service-details').eq(0).fadeIn();
                    break;
                case "puloc":
                    $('.rates-service-details').eq(1).fadeIn();
                    break;
                default:
                    $('.rates-service-details').fadeIn();
            }
        }
    }

    function changeTerm(product, value) {
        $(".term-container, .acc-fixed-rate-row, .heloc-fixed-disclosure").each(function () {
            if ($(this).is(":visible")) {
                $(this).toggle();
            }
        });
        switch (product) {
            case "puil":
                $("#lien-container-" + value).show();
                break;
            case "puloc":
                $("#lien-container-" + value).show();
                break;
        }
    }
    
    function buildDisclosure1(p, month, date, amtMin, loanPayment, loanPaymentMedian, minRate, maxRate, minPay, maxPay, numOfPay, annualFee, maxApr, medianRate, ) {
        var disclosureText = "";
        var loanAmount = amtMin;
        if (amtMin) amtMin = amtMin.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,");
        if (annualFee) annualFee = annualFee.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,");
        switch (p) {
            case "puil":
                disclosureText =
                    `<div class='disclosure-text'>
                		<div class='apr-disclosure'>
                    		<div class='disclosure-left'>
                        		<h4>APR:</h4>
                        		<p>Rates include a 0.25% interest rate discount for automated payment from a PNC checking account. Lowest rates available to well-qualified applicants. Other restrictions and conditions apply.</p>
                    		</div>
                			<div class='disclosure-right'>
                    			<p><strong>Rates Range From:</strong></p>
                    			<h5>${minRate}% - ${maxRate}% APR<sup>1</sup></h5>
                			</div>
                		</div>
                		
               			 <div class='disclosure-footnotes'>
                            <ol>
                    			<li><p><strong>Annual Percentage Rates:</strong> Annual Percentage Rates (APRs) between ${minRate}% to ${maxRate}%  available for personal unsecured installment loans in 
                                amounts of $${amtMin} with a ${month}-month repayment term. <strong>The lowest rates are available to well-qualified applicants. Your actual APR may be higher than the 
                                lowest available rate and will be based upon multiple factors such as credit qualifications, loan amount, repayment term, PNC relationship, automated payment from a PNC 
                                checking account and number of days to first payment.</strong> Other rates are available for different loan amounts and repayment terms. <strong>APRs include a 0.25% 
                                discount for automated payment from a PNC checking account.</strong> Automated payment must be set up at loan closing lo qualify for the 0.25% d discount. If automated 
                                payment is discontinued, you may no longer receive an automated payment discount and your rate will increase 0.25%. <strong>Loan Payment Example:</strong> The monthly 
                                payment per S1,000 borrowed at a range of  ${minRate}% APR to ${maxRate}% APR for the featured term means you would make ${numOfPay} payments that may range from 
                                $${minPay} to $${maxPay} based on 30 days to first payment.</p>
                    				<p>Credit is subject to approval. Certain restrictions and conditions apply. Rates, terms and conditions are as of ${date} and subject to change at any time.</p></li>
                            </div>
                    </div>`;
                break;
                case "puloc":
                    disclosureText =
                    `<div class='disclosure-text'>
                		<div class='apr-disclosure'>
                    		<div class='disclosure-left'>
                            	<h4>Current Variable Rate:</h4>
                                <p>Rates include a 0.25% interest rate discount for automated payment from a PNC checking account. Lowest rates available to well-qualified applicants. Other restrictions and conditions apply.</p>
                            </div>
                    		<div class='disclosure-right'>
                        		<p><strong>Rates Range From:</strong><br />
                        		<h5>${minRate}% - ${maxRate}% APR<sup>1</sup></h5></p>
                    		</div>
                    		<div class='disclosure-footnotes'>
                        		<p><sup>1</sup><strong>Annual Percentage Rates:</strong> Annual Percentage Rates (APRs) between ${minRate}% and ${maxRate}% for variable-rate personal unsecured lines of credit of $${amtMin}. 
                                <strong>The lowest rates are available to well-qualified applicants. Your actual APR may be higher than the lowest available rate and will be based upon multiple factors such as the current 
                                variable-rate index value, credit qualifications, line amount, PNC relationship and automated payment from a PNC checking account. </strong> Other rates may be applicable for different line 
                                amounts. <strong>APRs include a 0.25% discount for automated payment from a PNC checking account. </strong> Automated payment must be set up at loan closing to qualify for the 0.25% discount. 
                                If automated payment is discontinued, you may no longer receive an automated payment discount and your rate will increase 0.25%. The APR will never be more than ${maxApr}%. <strong>Annual Fee: </strong> The annual fee is $${annualFee}.</p>
                                <p>Credit is subject to approval. Certain restrictions and conditions apply. Rates, terms and conditions are as of ${date} and subject to change at any time.</p>
                    		</div>
                		</div>
            		</div>`;
                break;
        }
        $('#rate-disclosure').html(DOMPurify.sanitize(disclosureText));
        $('#rate-disclosure').show();
    }
})(jQuery);
